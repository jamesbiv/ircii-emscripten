diff -Naur ircii-20190117/include/irc_std.h ircii-20190117_emscripten/include/irc_std.h
--- ircii-20190117/include/irc_std.h	2019-01-16 14:20:02.000000000 -0300
+++ ircii-20190117_emscripten/include/irc_std.h	2019-07-29 12:20:38.508081596 -0300
@@ -79,6 +79,22 @@
 #include <stdint.h>
 #include <string.h>
 #include <stdlib.h>
+
+#ifdef __EMSCRIPTEN__
+#ifdef getenv
+#undef getenv
+#endif
+
+#define getenv(name) (char*)({\
+\
+  char* data = getenv(name);\
+  int len = strlen(data) + 1;\
+  char* dest = (char*)malloc(len * sizeof(char));\
+  strcpy(dest, data);\
+  dest;\
+})
+#endif
+
 #if defined(HAVE_MEMORY_H)
 # include <memory.h>
 #endif /* HAVE_MEMORY_H */
diff -Naur ircii-20190117/include/ircterm.h ircii-20190117_emscripten/include/ircterm.h
--- ircii-20190117/include/ircterm.h	2019-01-16 14:20:02.000000000 -0300
+++ ircii-20190117_emscripten/include/ircterm.h	2019-07-29 12:20:38.508081596 -0300
@@ -41,6 +41,10 @@
 # include <curses.h>
 #endif /* INCLUDE_CURSES_H */
 
+#ifdef __EMSCRIPTEN__
+#include <ncurses/curses.h>
+#endif
+
 #ifdef NCURSES_VERSION
 # define TPUTSRETVAL int
 # define TPUTSARGVAL int
diff -Naur ircii-20190117/source/irc.c ircii-20190117_emscripten/source/irc.c
--- ircii-20190117/source/irc.c	2019-01-18 07:35:34.000000000 -0300
+++ ircii-20190117_emscripten/source/irc.c	2019-07-29 12:20:38.508081596 -0300
@@ -73,6 +73,10 @@
 #include "notice.h"
 #include "icb.h"
 
+#ifdef __EMSCRIPTEN__
+#include <emscripten.h>
+#endif
+
 static	int	qflag;			/* set if we ignore .ircrc */
 static	int	bflag;			/* set if we load .ircrc before connecting */
 static	int	tflag = 1;		/* don't use termcap ti/te sequences */
@@ -722,6 +726,14 @@
 
 			server = set_from_server(get_window_server(0));
 			set_last_input_screen(screen);
+#ifdef __EMSCRIPTEN__
+			if ((n = read(screen_get_fdin(screen), loc_buffer, sizeof loc_buffer)) != 0) {
+				if(loc_buffer[0] != 0) {
+					for (i = 0; i < n; i++)
+						edit_char((u_int)loc_buffer[i]);
+				}
+			}
+#else
 			if ((n = read(screen_get_fdin(screen), loc_buffer,
 					sizeof loc_buffer)) != 0)
 				for (i = 0; i < n; i++)
@@ -735,6 +747,7 @@
 				 * if it is the main screen we got an EOF on, we exit..
 				 * closed tty -> chew cpu -> bad .. -phone, july 1993.
 				 */
+#endif
 #ifdef WINDOW_CREATE
 			else
 			{
@@ -900,6 +913,9 @@
 			if (get_primary_server() != -1)
 				do_notify();
 		}
+#ifdef __EMSCRIPTEN__
+		emscripten_sleep(50);
+#endif
 	}
 	while (irc_io_loop);
 
diff -Naur ircii-20190117/source/server.c ircii-20190117_emscripten/source/server.c
--- ircii-20190117/source/server.c	2019-04-26 15:20:02.000000000 -0300
+++ ircii-20190117_emscripten/source/server.c	2019-07-29 12:27:28.748081596 -0300
@@ -332,7 +332,7 @@
 	for (j = 0; j < number_of_servers(); j++)
 	{
 		close_msg = empty_string();
-#ifdef NON_BLOCKING_CONNECTS
+#if !defined(__EMSCRIPTEN__) && defined(NON_BLOCKING_CONNECTS)
 		/*
 		 *	deraadt@theos.com suggests that every fd awaiting connection
 		 *	should be run at this point.
@@ -346,6 +346,7 @@
 				login_to_server((from_server = j));
 		}
 #endif /* NON_BLOCKING_CONNECTS */
+
 		if ((des = server_list[j].read) != -1 && FD_ISSET(des, rd))
 		{
 			int	junk;
@@ -363,8 +364,10 @@
 			{
 				/* If we're not logged in, try again, or keep going. */
 				login_to_server((from_server = j));
+#ifndef __EMSCRIPTEN__
 				if (!(server_list[j].flags & LOGGED_IN))
 					goto real_continue;
+#endif
 			}
 #if 0
 			Debug(DB_SERVER, "ssl_info[%d] = %p (des = %d)", j,
@@ -1400,10 +1403,12 @@
 		 * whenever the connection is valid, it's possible for a connect to be
 		 * "immediate".
 		 */
+#ifndef __EMSCRIPTEN__
 		if (is_server_open(from_server) &&
 		    (using_ircio() ||
 		    getpeername(server_list[from_server].read, (struct sockaddr *) &sa, &salen) != -1))
 			login_to_server(from_server);
+#endif
 	}
 	else
 	{
diff -Naur ircii-20190117/source/term.c ircii-20190117_emscripten/source/term.c
--- ircii-20190117/source/term.c	2015-09-05 15:20:02.000000000 -0300
+++ ircii-20190117_emscripten/source/term.c	2019-07-29 12:20:38.508081596 -0300
@@ -56,6 +56,11 @@
 #include "screen.h"
 #include "output.h"
 
+#ifdef __EMSCRIPTEN__
+#include <ncurses/curses.h>
+#include <ncurses/term.h>
+#endif
+
 #ifndef	STTY_ONLY
 static int	term_CE_clear_to_eol(void);
 static int	term_CS_scroll(int, int, int);
